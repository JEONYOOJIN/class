*{
    padding: 0;
    margin: 0;
}
a{
    text-decoration: none;
}
ul,ol,dl{
    list-style: none;
}
.any{
    font-size: 3em;
    /* animation-name: fadeInOut; */
    /*애니메이션의 이름을 정의합니다.*/
    /* animation-duration: 1s; */
    /*한 싸이클의 애니메이션이 얼마에 걸쳐 일어날지 지정합니다.
    duration = transition 이랑 똑같음*/
    /* animation-delay: 3s; */
    /*언제 애니메이션이 시작될지 지정합니다.*/
    /* animation-direction: alternate; */
    /*애니메이션이 종료되고 다시 처음부터 시작할지 역방향으로 진행할지 지정합니다.*/
    /*
    normal : 기본값, 재생 끝나면 처음부터 다시 재생
    reverse : 역방향으로 재생
    alternate : 순방향 <-> 역방향 번갈아가며 재생
    alternate-reverse : 역방향 <-> 순방향 번갈아가며 재생
    */
    /* animation-iteration-count: infinite; */
    /*애니메이션이 몇 번 반복될지 지정합니다.*/
    /* animation-play-state: running; */
    /*애니메이션을 멈추거나 다시 시작할 수 있습니다.*/
    /*
    running 재생
    paused 멈춤
    */
    /* animation-timing-function: ease-in-out; */
    /*중간 상태들의 전환을 '어떤 시간간격'으로 '진행'할지 지정*/
    /* animation-fill-mode: both; */
    /*애니메이션이 시작되기 전이나 끝나고 난 후 어떤 값이 적용될지 지정*/
    animation: fadeInOut 1s ease-in-out 3s infinite alternate both running ;
    /*축약형 : animation: name | duration | timing-function | delay | iteration-count | direction | fill-mode | play-state
    이름 / 얼마에 걸쳐 / 어떤 시간 간격으로 전환 / 언제 시작할지 / 몇번 반복할지 / 종료 후 진행방식 / 시작 전후 어떤 값 적용할지 / 멈출지 다시 시작할지
    기본값은 마지막에 넣는 running 밖에 없고, 나머지는 전부 지정값, 앵간하면 순서를 지켜야 함*/
}
@keyframes fadeInOut{
    /*키프레임을 쓸 건데 그 키프레임 이름이 fadeInOut이야*/
    0%{
        opacity: 1;
    }
    /*from=0%, from이라고 작성해도 0%랑 똑같이 먹는다*/
    100%{
        opacity: 0;
        color: #0000ff;
    }
    /*to=100%, to라고 작성해도 100%랑 똑같이 먹는다*/

    /* opacity: 1; => 1은 보임
    opacity: 0; => 0은 안보임*/
}
/*
- 스타일 가장 아래에 @로 이름 지어줄 애를 불러주고, 이름을 지어줌 (카멜케이스로 작성)
- none 네임은 재생 안함
- 숫자시작, 특수문자시작 안됨
- *_-, 여백X, 한글X

- 키프레임은 0% ~ 100%까지 세부적으로 1%씩 다 들어갈 수 있음
*/